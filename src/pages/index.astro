---
import { Library } from "lucide-astro";
import Stars from "../components/UI/Stars.astro";
import WorkCard from "../components/UI/workCard.astro";
import Layout from "../layouts/Layout.astro";
import { Content as TechStack } from "../pages/techstack.md";
import Particals from "../components/UI/particals.astro";
interface Frontmatter {
  title: string;
  disabled: boolean;
  state: string;
  id: string;
  link: string;
  description: string;
  techstack: string[];
}
const works = await Astro.glob<Frontmatter>("../pages/works/*.md");
const completedWorks = await Astro.glob<Frontmatter>(
  "../pages/works/Completed/*.md"
);
---

<Layout title="Welcome to Astro.">
  <main
    class="flex flex-col justify-center gap-20 px-4 dark:bg-gradient-to-b from-black to-base to-50%"
  >
    <div class="flex justify-center flex-col relative select-none p-4">
      <div class="h-dvh flex justify-center items-center relative">
        <Particals />
        <div
          class="flex flex-col md:flex-row gap-2 justify-center items-center h-fit p-9 px-20 rounded-xl hover:shadow-sm hover:shadow-text hover:transition-colors z-20 bg-mantle dark:hover:bg-black/80 dark:bg-black/60"
        >
          <div
            class="inline-flex justify-center items-center rounded-full shadow-none w-fit aspect-square p-5 transition-all duration-500 hover:transition-all hover:duration-500 hover:bg-transparent group/container"
          >
            <Stars />
          </div>
          <h1
            class="text-7xl font-chakra font-extrabold whitespace-nowrap"
            id="name"
          >
            <span
              class="after:content-['α'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false">{"S"}</span
            >
            <span
              class="after:content-['δ'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false">{"t"}</span
            >
            <span
              class="after:content-['ε'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false">{"e"}</span
            >
            <span
              class="after:content-['ζ'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false">{"r"}</span
            >
            <span
              class="after:content-['η'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false">{"n"}</span
            >
            <span
              class="after:content-['γ'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false">{"a"}</span
            >
            <span
              class="after:content-['β'] data-[reveal='true']:opacity-100 opacity-0 relative hover:after:transition-all after:absolute after:-top-0 after:transition-all after:opacity-0 sm:hover:after:opacity-100 hover:after:-top-5 after:right-1/2 after:translate-x-1/2 after:text-xl"
              data-reveal="false"
              >{"s"}
            </span>
          </h1>
        </div>
      </div>
      <div class="flex justify-center items-center gap-5 select-text">
        <span
          class="text-3xl font-chakra font-extrabold text-rosePineDawn-muted relative w-fit"
        >
          For tomorrow's <span
            class="text-rosePineMoon-gold relative after:absolute after:w-1 after:h-px after:rounded after:bg-rosePineDawn-gold after:right-0 after:bottom-1 after:transition-all hover:after:w-full after:duration-500 after:opacity-0 hover:after:opacity-100"
            >Sunrise</span
          >,
        </span>
        <span
          class="text-3xl font-chakra font-extrabold text-rosePineDawn-muted"
        >
          For yesterday's
          <span
            class="dark:text-white text-text relative after:content-['299,792,458'] after:shadow-lg after:bg-mantle after:rounded after:p-2 after:font-thin after:pointer-events-none after:opacity-0 hover:after:opacity-100 after:absolute after:top-0 after:right-1/2 hover:after:-top-12 after:-translate-x-1/2 sm:after:translate-x-1/2 after:transition-all"
          >
            Starlight</span
          >.
        </span>
      </div>
    </div>
    <div class="divide-y divide-rosePine-muted divide-dashed">
      <div class="flex flex-col p-5 pt-20 md:p-20">
        <h1 class="font-bold text-3xl ml-20 mb-5">My Works</h1>
        <div
          class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 grid-flow-row gap-4"
        >
          {
            completedWorks.map((work) => {
              return (
                <WorkCard
                  disabled={work.frontmatter.disabled}
                  state={work.frontmatter.state}
                  description={work.frontmatter.description}
                  id={work.frontmatter.id}
                  techstack={work.frontmatter.techstack}
                  title={work.frontmatter.title}
                  uri={work.url as string}
                  link={work.frontmatter.link}
                />
              );
            })
          }
          {
            works.map((work) => {
              return (
                <WorkCard
                  disabled={work.frontmatter.disabled}
                  state={work.frontmatter.state}
                  description={work.frontmatter.description}
                  id={work.frontmatter.id}
                  techstack={work.frontmatter.techstack}
                  title={work.frontmatter.title}
                  uri={work.url as string}
                  link={work.frontmatter.link}
                />
              );
            })
          }
        </div>
      </div>
      <div class=" flex-col p-5 pt-20 md:p-20 hidden">
        <h1 class="font-bold text-3xl ml-20 mb-5">
          lerned
          <span>
            <Library class="inline" />
          </span>
        </h1>
        <div>
          <TechStack />
        </div>
      </div>
      <div class="flex flex-col p-5 pt-20 md:p-20 justify-center items-center">
        <a
          href="/aboutme"
          class="font-bold text-3xl ml-20 mb-5 text-text relative text-center after:bottom-0 after:right-1/2 after:w-full after:translate-x-1/2 after:absolute after:bg-white after:h-px after:scale-0 hover:after:scale-100 after:transition-all"
          >About me</a
        >
      </div>
    </div>
  </main>
</Layout>

<style></style>

<script>
  import { nameAnimation } from "../lib/landing";
  nameAnimation();
</script>
