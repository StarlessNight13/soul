---

---

<div class="absolute inset-0 z-10 hidden size-full md:dark:block">
  <canvas id="particles" class="size-full"></canvas>
  <script is:inline>
    const canvas = document.getElementById("particles");
    const ctx = canvas.getContext("2d");

    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;

    let mouseX = 0;
    let mouseY = 0;
    let isMouseOnCanvas = false;

    document.addEventListener("mousemove", (e) => {
      if (e.target === canvas) {
        const rect = canvas.getBoundingClientRect();
        mouseX = e.clientX - rect.left;
        mouseY = e.clientY - rect.top;
        isMouseOnCanvas = true;
      } else {
        isMouseOnCanvas = false;
      }
    });

    class Particle {
      constructor(x, y) {
        this.x = x;
        this.y = y;
        this.vx = Math.random() * 0.001 - 0.005;
        this.vy = -Math.random() * 0.001 - 0.005;
      }

      update() {
        if (isMouseOnCanvas) {
          const dx = mouseX - this.x;
          const dy = mouseY - this.y;
          const distance = Math.sqrt(dx * dx + dy * dy);
          if (distance < 100) {
            this.vx += (dx / distance) * 0.0001;
            this.vy += (dy / distance) * 0.0001;
            if (distance < 10) {
              this.vx = 0;
              this.vy = 0;
            }
          }
        }
        this.x += this.vx;
        this.y += this.vy;
        // Boundary check
        if (this.x < 0) {
          this.x = 0;
          this.vx *= -1;
        } else if (this.x > canvas.width) {
          this.x = canvas.width;
          this.vx *= -1;
        }
        if (this.y < 0) {
          this.y = 0;
          this.vy *= -1;
        } else if (this.y > canvas.height) {
          this.y = canvas.height;
          this.vy *= -1;
        }
      }

      draw() {
        ctx.beginPath();
        ctx.arc(this.x, this.y, 1, 0, Math.PI * 2);

        // ctx.rect(this.x, this.y, 2, 2);
        ctx.fillStyle = "rgba(255, 255, 255, 1) ";
        ctx.fill();
      }
    }

    const particles = [];
    const emissionRate = 1000; // particles per second
    const emissionInterval = 1000 / emissionRate; // milliseconds
    const maxParticles = 500;

    function emitParticle() {
      const centerX = getRandomInt(canvas.width);
      const centerY = getRandomInt(canvas.height);
      particles.push(new Particle(centerX, centerY));
    }

    const particalsInterval = setInterval(() => {
      if (particles.length < maxParticles) {
        emitParticle();
      } else {
        console.log("done");
        clearInterval(particalsInterval);
      }
    }, emissionInterval);

    function animate() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      for (let i = 0; i < particles.length; i++) {
        particles[i].update();
        particles[i].draw();
      }
      requestAnimationFrame(animate);
    }
    function getRandomInt(max) {
      return Math.floor(Math.random() * max);
    }
    animate();
  </script>
</div>
