---
import Construction from "./Construction.astro";
import { Image } from "astro:assets";

interface Props {
  title: string;
  disabled: boolean;
  state: string;
  id: string;
  uri: string;
  link: string;
  description: string;
  techstack: string[];
}
const { disabled, state, id, description, techstack, title, link, uri } =
  Astro.props;

const imagePath = `/soul/screenshots/${id}.png`;
---

<div
  class={" flex flex-col items-center justify-center relative data-[state='dealyed']:sepia  bg-surface0 bg-opacity-75 rounded-md overflow-clip pb-1 aria-disabled:grayscale aria-disabled:pointer-events-none"}
  aria-disabled={disabled}
  data-state={state}
>
  <span
    class={"absolute top-2 right-2 p-1 rounded-lg text-xs z-10 bg-opacity-80  pointer-events-none  " +
      (state === "Complete" ? "bg-green text-black" : "bg-gray-600")}
  >
    {state}
  </span>
  <a
    href={link}
    class="flex w-full flex-col items-center rounded-lg p-1 grayscale transition-all duration-700 hover:grayscale-0"
  >
    <span
      class="absolute left-2 top-2 z-10 rounded-lg bg-black bg-opacity-30 p-1 text-xs"
    >
      ðŸ”—
    </span>
    {
      state === "Complete" ? (
        <Image
          src={imagePath}
          width="5000"
          height="5000"
          alt={id}
          class="flex-grow rounded-lg object-cover"
        />
      ) : (
        <Construction />
      )
    }
  </a>
  <div class="h-1/5 w-full flex-grow p-1 px-4 text-center">
    <a href={uri} class="font-bol text-center text-xl">
      {title}
    </a>

    <p
      class="relative truncate text-sm text-rosePine-muted before:absolute before:content-[attr(aria-details)]"
      aria-details={description}
    >
      {description}
    </p>
    <div class="mt-1 flex flex-row flex-wrap gap-1 text-xs text-subtext1">
      {
        techstack.map((e: unknown) => {
          return (
            <span class="flex-1 rounded-sm bg-overlay0 p-1 align-middle">
              {e}
            </span>
          );
        })
      }
    </div>
  </div>
</div>
